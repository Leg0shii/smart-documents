services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart-documents-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart-documents-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:5000"
      - "${LIVE_UPDATE_PORT}:35729"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    environment:
      - NODE_ENV=development

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data: